zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: a571c0d144b14fd4a87a9d9b2aa9fcd6
      name: Templates/Applications
  templates:
    - uuid: b8c39e144f7b4454a106399770430f82
      template: 'Object First OOTBI Cluster by HTTP'
      name: 'Object First OOTBI Cluster by HTTP'
      description: |
        This template is designed to monitor an Object First OOTBI Cluster.

        Setup:
        1. Create a user to monitor the service or use an existing user.
        2. Link the template to a host.
        3. Configure the following macros: {$OOTBI.API.URL}, {$OOTBI.USER}, and {$OOTBI.PASSWORD}.
      groups:
        - name: Templates/Applications
      items:
        - uuid: 2f2f9680da034656a9031cc9aa7d7f9f
          name: 'Cluster Status'
          type: DEPENDENT
          key: ootbi.get.cluster.status
          delay: '0'
          value_type: TEXT
          trends: '0'
          description: 'Get the cluster status'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.clusters.members[:].status'
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: ootbi.get.metrics
          tags:
            - tag: component
              value: status
          triggers:
            - uuid: e87bdcf5b6ae42b1959dbbc8340ffef0
              expression: 'find(/Object First OOTBI Cluster by HTTP/ootbi.get.cluster.status,,"like","\"OK\"")=0'
              name: 'Object First OOTBI: Cluster is not healthy'
              opdata: '{ITEM.LASTVALUE1}'
              priority: HIGH
              description: 'Cluster reports it''s not healthy. Please inspect the cluster.'
              tags:
                - tag: scope
                  value: availability
        - uuid: fa1f7375540d40fd8826a530c981078d
          name: 'Get errors'
          type: DEPENDENT
          key: ootbi.get.errors
          delay: '0'
          value_type: TEXT
          trends: '0'
          description: 'The errors from API requests.'
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.error
              error_handler: CUSTOM_VALUE
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: ootbi.get.metrics
          tags:
            - tag: component
              value: status
          triggers:
            - uuid: ce22e052f97d45efa5094fceb412ee28
              expression: 'length(last(/Object First OOTBI Cluster by HTTP/ootbi.get.errors))>0'
              name: 'Object First OOTBI: There are errors in requests to API'
              opdata: '{ITEM.LASTVALUE1}'
              priority: AVERAGE
              description: 'Zabbix has received errors in response to API requests.'
              tags:
                - tag: scope
                  value: availability
        - uuid: 0afcc7150b8e429cacf0ff31c05eda00
          name: 'Get metrics'
          type: SCRIPT
          key: ootbi.get.metrics
          delay: 5m
          history: '0'
          value_type: TEXT
          trends: '0'
          params: |
            var Ootbi = {
              params: {},
              token: "",

              setParams: function (params) {
                ["api_endpoint", "user", "password"].forEach(function (field) {
                  if (
                    typeof params !== "object" ||
                    typeof params[field] === "undefined" ||
                    params[field] === ""
                  ) {
                    throw "Required param is not set: " + field + ".";
                  }
                });

                Ootbi.params = params;
                if (
                  typeof Ootbi.params.api_endpoint === "string" &&
                  !Ootbi.params.api_endpoint.endsWith("/")
                ) {
                  Ootbi.params.api_endpoint += "/";
                }
              },

              login: function () {
                var resp,
                  login = new HttpRequest();
                var data = JSON.stringify({
                  username: Ootbi.params.user,
                  password: btoa(Ootbi.params.password),
                });
                if (
                  typeof Ootbi.params.http_proxy !== "undefined" &&
                  Ootbi.params.http_proxy !== ""
                ) {
                  login.setProxy(Ootbi.params.http_proxy);
                }
                login.addHeader("Content-Type: application/json");
                resp = login.post(Ootbi.params.api_endpoint + "api/v1/account/login", data);

                if (login.getStatus() !== 200 || resp === null) {
                  throw "Login failed with status code " + login.getStatus() + ": " + resp;
                }

                try {
                  resp = JSON.parse(resp);
                } catch (error) {
                  throw "Failed to parse authentication token for the logon session.";
                }
                if (!resp.hasOwnProperty("token")) {
                  throw "Auth response does not contain access token.";
                }
                Ootbi.token = resp["token"];
              },

              request: function (url) {
                var response,
                  request = new HttpRequest();
                if (
                  typeof Ootbi.params.http_proxy !== "undefined" &&
                  Ootbi.params.http_proxy !== ""
                ) {
                  request.setProxy(Ootbi.params.http_proxy);
                }
                if (Ootbi.token) {
                  request.addHeader("Authorization: " + Ootbi.token);
                  response = request.get(url);
                }
                if (request.getStatus() !== 200 || response === null) {
                  throw (
            		url +
                    " - request failed with status code " +
                    request.getStatus() +
                    ": " +
                    response
                  );
                }
                try {
                  return JSON.parse(response);
                } catch (error) {
                  throw "Failed to parse response received from API.";
                }
              },

              getMetricsData: function () {
            	var data = {};
            	endpoints = {
            		'clusters': 'api/v1/clusters',
            		'alerts': 'api/v1/alerts',
            	};

            	Object.keys(endpoints).forEach(function (key) {
            		data[key] = Ootbi.request(Ootbi.params.api_endpoint + endpoints[key]);
            	});

            	return data;
            },
            };

            try {
              Ootbi.setParams(JSON.parse(value));
              Ootbi.login();
              return JSON.stringify(Ootbi.getMetricsData());
            } catch (error) {
              error += String(error).endsWith(".") ? "" : ".";
              Zabbix.log(3, "[ OOTBI ] ERROR: " + error);
              return JSON.stringify({ error: error });
            }
          description: 'The result of API requests is expressed in the JSON.'
          timeout: '{$OOTBI.DATA.TIMEOUT}'
          parameters:
            - name: api_endpoint
              value: '{$OOTBI.API.URL}'
            - name: http_proxy
              value: '{$OOTBI.HTTP.PROXY}'
            - name: password
              value: '{$OOTBI.PASSWORD}'
            - name: user
              value: '{$OOTBI.USER}'
          tags:
            - tag: component
              value: raw
      discovery_rules:
        - uuid: 1f80923146b34203a97e417b158dd14c
          name: 'Node discovery'
          type: DEPENDENT
          key: ootbi.node.discovery
          delay: '0'
          description: 'Discovery of cluster nodes.'
          item_prototypes:
            - uuid: a111487c84174bc19e7d9070b5818b50
              name: 'Node [{#NAME}]: Host Name'
              type: DEPENDENT
              key: 'ootbi.node.name[{#NAME}]'
              delay: '0'
              value_type: TEXT
              trends: '0'
              description: 'The name of the cluster node.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.name
              master_item:
                key: 'ootbi.node.raw[{#ID}]'
              tags:
                - tag: component
                  value: nodes
                - tag: node
                  value: '{#NAME}'
            - uuid: 2a527726741045f780ec16b9445b032f
              name: 'Node [{#NAME}]: Get data'
              type: DEPENDENT
              key: 'ootbi.node.raw[{#ID}]'
              delay: '0'
              history: '0'
              value_type: TEXT
              trends: '0'
              description: 'Gets raw data from the node `[{#NAME}]`.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.clusters.members[:].nodes.[?(@.id==''{#ID}'')].first()'
              master_item:
                key: ootbi.get.metrics
              tags:
                - tag: component
                  value: nodes
                - tag: component
                  value: raw
                - tag: node
                  value: '{#NAME}'
            - uuid: 5f7f8db5c82f4eb381aa6763c11f7be1
              name: 'Node [{#NAME}]: State'
              type: DEPENDENT
              key: 'ootbi.node.state[{#NAME}]'
              delay: '0'
              value_type: TEXT
              trends: '0'
              description: 'The state of the cluster node.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.state
              master_item:
                key: 'ootbi.node.raw[{#ID}]'
              tags:
                - tag: component
                  value: nodes
                - tag: node
                  value: '{#NAME}'
              trigger_prototypes:
                - uuid: 623a34c236ae4f609ac993d91c6856d9
                  expression: 'find(/Object First OOTBI Cluster by HTTP/ootbi.node.state[{#NAME}],,"like","OK")=0'
                  name: 'Object First OOTBI: {#NAME} Cluster node not healthy'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  manual_close: 'YES'
            - uuid: eeeb674b0ea145c39a054a0c315a58ca
              name: 'Node [{#NAME}]: Uptime'
              type: DEPENDENT
              key: 'ootbi.node.uptime[{#NAME}]'
              delay: '0'
              value_type: FLOAT
              trends: '0'
              units: s
              description: 'The uptime of the cluster node.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - $.uptimeInSec
              master_item:
                key: 'ootbi.node.raw[{#ID}]'
              tags:
                - tag: component
                  value: nodes
                - tag: node
                  value: '{#NAME}'
              trigger_prototypes:
                - uuid: dd08b584d2bd4fdc9e91c7f352cd1a65
                  expression: 'last(/Object First OOTBI Cluster by HTTP/ootbi.node.uptime[{#NAME}])<10m'
                  name: 'Object First OOTBI: {#NAME} Cluster node restarted (uptime < 10m)'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  manual_close: 'YES'
          master_item:
            key: ootbi.get.metrics
          lld_macro_paths:
            - lld_macro: '{#ID}'
              path: $.id
            - lld_macro: '{#NAME}'
              path: $.name
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.clusters.members[:].nodes[:]'
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 6h
      tags:
        - tag: class
          value: software
        - tag: target
          value: 'Object First'
      macros:
        - macro: '{$OOTBI.API.URL}'
          value: 'https:/localhost:8443'
          description: 'The OOTBI Cluster endpoint is a URL in the format `<scheme>://<host>:<port>`.'
        - macro: '{$OOTBI.DATA.TIMEOUT}'
          value: '10'
          description: 'A response timeout for the API.'
        - macro: '{$OOTBI.HTTP.PROXY}'
          description: 'Sets the HTTP proxy to `http_proxy` value. If this parameter is empty, then no proxy is used.'
        - macro: '{$OOTBI.PASSWORD}'
          type: SECRET_TEXT
          description: 'The `password` of the Object First OOTBI Cluster account. It is used to obtain an access token.'
        - macro: '{$OOTBI.USER}'
          description: 'The `username` of the Object First OOTBI Cluster account. It is used to obtain an access token.'
